{"ast":null,"code":"import _defineProperty from \"/Users/andrew/GOLDToCalender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/andrew/GOLDToCalender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrew/GOLDToCalender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrew/GOLDToCalender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrew/GOLDToCalender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrew/GOLDToCalender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/andrew/GOLDToCalender/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/andrew/GOLDToCalender/src/home.js\";\nimport React, { Component } from 'react';\nimport './css/home.css';\nimport Proc from \"./components/imageprocessor\";\nimport ImageUploader from 'react-images-upload';\nimport { loginWithGoogle } from \"../helpers/auth\";\nimport { firebaseAuth } from \"../config/constants\";\nimport \"./css/googlesignin.css\";\nimport firebase from \"firebase\";\nvar firebaseAuthKey = \"firebaseAuthInProgress\";\nvar appTokenKey = \"appToken\";\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBROZZvSTM4XbVEuppNsSmzmAeHxxrX7GE\",\n  authDomain: \"goldtocalendar-1547328134993.firebaseapp.com\"\n});\nvar provider = new firebase.auth.GoogleAuthProvider();\nfirebase.auth().getRedirectResult().then(function (result) {\n  if (result.credential) {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    var token = result.credential.accessToken;\n    this.state.setState({\n      isSignedIn: true\n    });\n  } // The signed-in user info.\n\n\n  var user = result.user;\n}).catch(function (error) {\n  // Handle Errors here.\n  var errorCode = error.code;\n  var errorMessage = error.message; // The email of the user's account used.\n\n  var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n  var credential = error.credential; // ...\n});\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.signInWithRedirect = function () {\n      firebase.auth().signInWithRedirect(provider).then(firebase.auth().getRedirectResult().then(function (authData) {\n        console.log(authData);\n        console.log(\"done\");\n      }));\n    };\n\n    _this.signout = function () {\n      firebase.auth().signOut().then(function () {\n        // Sign-out successful.\n        this.setState({\n          isSignedIn: false\n        });\n      }).catch(function (error) {// An error happened.\n      });\n    };\n\n    _this.state = {\n      pictures: [],\n      imageuploaded: false,\n      isSignedIn: false,\n      splashScreen: false\n    };\n    _this.handleGoogleLogin = _this.handleGoogleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDrop = _this.onDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"handleGoogleLogin\",\n    value: function handleGoogleLogin() {\n      loginWithGoogle().catch(function (error) {\n        alert(error); // or show toast\n\n        localStorage.removeItem(firebaseAuthKey);\n      });\n      localStorage.setItem(firebaseAuthKey, \"1\");\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(picture) {\n      this.setState({\n        pictures: this.state.pictures.concat(picture),\n        imageuploaded: true\n      });\n      console.log(\"uploaded\");\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      if (localStorage.getItem(appTokenKey)) {\n        this.props.history.push(\"/app/home\");\n        return;\n      }\n\n      firebaseAuth().onAuthStateChanged(function (user) {\n        if (user) {\n          console.log(\"User signed in: \", JSON.stringify(user));\n          localStorage.removeItem(firebaseAuthKey); // here you could authenticate with you web server to get the\n          // application specific token so that you do not have to\n          // authenticate with firebase every time a user logs in\n\n          localStorage.setItem(appTokenKey, user.uid); // store the token\n\n          _this2.props.history.push(\"/app/home\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(firebaseAuthKey + \"=\" + localStorage.getItem(firebaseAuthKey));\n      if (localStorage.getItem(firebaseAuthKey) === \"1\") return React.createElement(SplashScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n\n      if (this.state.isSignedIn && this.state.imageuploaded) {\n        return React.createElement(\"div\", {\n          className: \"homebox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Proc, {\n          image: this.state.pictures[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Sign Out\"), React.createElement(\"button\", {\n          className: \"btn signOut\",\n          label: \"Google Sign Out\",\n          onClick: this.signout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Sign Out\")));\n      } else if (this.state.isSignedIn && !this.state.imageuploaded) {\n        var _React$createElement;\n\n        return React.createElement(\"div\", {\n          className: \"homebox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          className: \"homehead\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Upload an Image to get started\"), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"div\", (_React$createElement = {\n          className: \"col-md-6 col-md-offset-3\"\n        }, _defineProperty(_React$createElement, \"className\", \"uploader\"), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(ImageUploader, {\n          withIcon: true,\n          buttonText: \"Choose image\",\n          onChange: this.onDrop,\n          imgExtension: ['.jpg', '.gif', '.png', '.gif'],\n          maxFileSize: 5242880,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"https://photos.app.goo.gl/5xQr8x333gPYCXXPA\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, \"Don't go to UCSB? Here's a sample photo!\")), React.createElement(\"div\", {\n          className: \"GoogleSignIn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"Sign Out\"), React.createElement(\"button\", {\n          className: \"btn signOut\",\n          label: \"Google Sign Out\",\n          onClick: this.signout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, \"Sign Out\"))));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"homebox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"Sign In\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn signIn\",\n          label: \"Google Sign In\",\n          onClick: handleGoogleLogin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"Sign In With Google\")));\n      }\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport { Home as default };\n\nvar SplashScreen = function SplashScreen() {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Loading...\");\n};","map":{"version":3,"sources":["/Users/andrew/GOLDToCalender/src/home.js"],"names":["React","Component","Proc","ImageUploader","loginWithGoogle","firebaseAuth","firebase","firebaseAuthKey","appTokenKey","initializeApp","apiKey","authDomain","provider","auth","GoogleAuthProvider","getRedirectResult","then","result","credential","token","accessToken","state","setState","isSignedIn","user","catch","error","errorCode","code","errorMessage","message","email","Home","props","signInWithRedirect","authData","console","log","signout","signOut","pictures","imageuploaded","splashScreen","handleGoogleLogin","bind","onDrop","alert","localStorage","removeItem","setItem","picture","concat","getItem","history","push","onAuthStateChanged","JSON","stringify","uid","SplashScreen"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './css/home.css';\nimport Proc from \"./components/imageprocessor\"\nimport ImageUploader from 'react-images-upload';\n\nimport {loginWithGoogle} from \"../helpers/auth\";\nimport {firebaseAuth} from \"../config/constants\";\n\nimport \"./css/googlesignin.css\";\nimport firebase from \"firebase\"\n\n\nconst firebaseAuthKey = \"firebaseAuthInProgress\";\nconst appTokenKey = \"appToken\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBROZZvSTM4XbVEuppNsSmzmAeHxxrX7GE\",\n  authDomain: \"goldtocalendar-1547328134993.firebaseapp.com\"\n})\n\nvar provider = new firebase.auth.GoogleAuthProvider();\nfirebase.auth().getRedirectResult().then(function(result) {\n  if (result.credential) {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    var token = result.credential.accessToken;\n    this.state.setState({isSignedIn: true});\n   \n  }\n  // The signed-in user info.\n  var user = result.user;\n}).catch(function(error) {\n  // Handle Errors here.\n  var errorCode = error.code;\n  var errorMessage = error.message;\n  // The email of the user's account used.\n  var email = error.email;\n  // The firebase.auth.AuthCredential type that was used.\n  var credential = error.credential;\n  // ...\n});\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n     this.state = { pictures: [],\n      imageuploaded:false,\n      isSignedIn : false, \n      splashScreen: false\n    };\n    this.handleGoogleLogin = this.handleGoogleLogin.bind(this);\n     this.onDrop = this.onDrop.bind(this);\n}\nhandleGoogleLogin() {\n  loginWithGoogle()\n      .catch(function (error) {\n          alert(error); // or show toast\n          localStorage.removeItem(firebaseAuthKey);\n      });\n  localStorage.setItem(firebaseAuthKey, \"1\");\n}\n\nonDrop(picture) {\n    this.setState({\n        pictures: this.state.pictures.concat(picture),\n        \n      imageuploaded:true\n    }\n    );\n    console.log(\"uploaded\")\n}\n\n\n    \n  signInWithRedirect = ()=>{\n    \n    firebase.auth().signInWithRedirect(provider).then(\n     \n    firebase.auth().getRedirectResult().then(\n      function(authData) {\n      console.log(authData);\n      console.log(\"done\");\n    })\n    );\n  }\n  \n  signout = ()=>{\n    firebase.auth().signOut().then(function() {\n      // Sign-out successful.\n      this.setState({\n        isSignedIn:false\n      })\n    }).catch(function(error) {\n      // An error happened.\n    });\n  }\n\n  componentWillMount() {\n    if (localStorage.getItem(appTokenKey)) {\n      this.props.history.push(\"/app/home\");\n      return;}\n      firebaseAuth().onAuthStateChanged(user => {\n        if (user) {\n            console.log(\"User signed in: \", JSON.stringify(user));\n\n            localStorage.removeItem(firebaseAuthKey);\n\n            // here you could authenticate with you web server to get the\n            // application specific token so that you do not have to\n            // authenticate with firebase every time a user logs in\n            localStorage.setItem(appTokenKey, user.uid);\n\n            // store the token\n            this.props.history.push(\"/app/home\")\n        }\n    });\n  }\n\n\n        render() {\n          console.log(firebaseAuthKey + \"=\" + localStorage.getItem(firebaseAuthKey));\n        if (localStorage.getItem(firebaseAuthKey) === \"1\") return <SplashScreen />;\n\n          if(this.state.isSignedIn && this.state.imageuploaded ){\n          return(\n            \n          <div className = \"homebox\">\n          <Proc image={this.state.pictures[0]}/>\n            <div>\n              <h1>Sign Out</h1>\n              <button\n                    className = \"btn signOut\"\n                    label=\"Google Sign Out\"\n                    onClick={this.signout}>\n                Sign Out\n                </button>\n            </div>\n            \n            </div>\n        )} \n        else if(this.state.isSignedIn && !this.state.imageuploaded ){\n          return(\n            <div className=\"homebox\">\n            \n          <strong className=\"homehead\">Upload an Image to get started</strong>\n            <div className=\"row\">\n              <div className=\"col-md-6 col-md-offset-3\" className=\"uploader\">\n                <ImageUploader\n                      withIcon={true}\n                      buttonText='Choose image'\n                      onChange={this.onDrop}\n                      imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                      maxFileSize={5242880}\n                />\n              </div>\n            </div>\n            <div>\n              <a href=\"https://photos.app.goo.gl/5xQr8x333gPYCXXPA\">Don't go to UCSB? Here's a sample photo!</a>\n            </div>\n            <div className = \"GoogleSignIn\">\n              <div>\n                <h1>Sign Out</h1>\n                <button\n                      className = \"btn signOut\"\n                      label=\"Google Sign Out\"\n                      onClick={this.signout}>\n                  Sign Out\n                  </button>\n              </div>\n              </div>\n            \n          </div>\n             \n          )\n        }\n        else{ \n          return(\n          <div className=\"homebox\">\n              <h1>Sign In</h1>\n              <div>\n                <button\n                    className = \"btn signIn\"\n                    label=\"Google Sign In\"\n                    onClick={handleGoogleLogin}>\n                Sign In With Google\n                </button>\n              </div>\n          </div>\n        )}\n        \n      \n        }\n}\nconst SplashScreen = () => (<p>Loading...</p>)\n"]},"metadata":{},"sourceType":"module"}